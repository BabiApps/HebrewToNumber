from parser import hebrew_to_number

valid_tests = [
    ("אפס", 0),
    ("אחת עשרה", 11),
    ("שש עשרה", 16),
    ("מאה עשרים ושלוש", 123),
    ("מאתיים חמישים ושבע", 257),
    ("אלף מאתיים שלושים וארבע", 1234),
    ("שלושה מיליון מאתיים אלף", 3_200_000),
    ("מיליארד ומאה מיליון", 1_100_000_000),
    ("תשע מאות תשעים ותשע", 999),
    ("ארבע מאות חמישים ושבע", 457),
    ("שלושים אלף וחמש מאות", 30_500),
    ("מיליון", 1_000_000),
    ("שני מיליון", 2_000_000),
    ("מיליון ומאתיים שלושים אלף", 1_230_000),
    ("שלוש מאות אלף שש מאות ושבעים", 300_670),
    ("ארבעה מיליארד שלוש מאות מיליון", 4_300_000_000),
    ("תשע מאות אלף תשע מאות תשעים ותשע", 900_999),
    ("אלפיים ושבע מאות וחמישים ושמונה", 2_758),
    ("חמישה מיליון מאה אלף", 5_100_000),
    ("מיליארד ושבע מאות אלף שלוש מאות תשעים ואחד", 1_000_700_391),
    ("עשרים ושלושה אלף ארבע מאות חמישים ושש", 23_456),
    ("שבע מאות שמונים ותשע אלף מאתיים שלושים ואחד", 789_231),
    ("מיליון וחצי", 1_500_000),
    ("מיליון וחצי 3 אלף וחמש מאות 30", 1_503_530),
    ("67 אלף", 67_000),
    ("10.3 מיליון", 10_300_000),
    ("2.5 מיליארד", 2_500_000_000),
]

invalid_tests = [
    "2 מליון ומיליון וחצי", 
    "מליון מיליון",     
    "אלף מיליון",      
    "שלוש מאות מיליון מיליון", 
    "חמש אלף אלף",       
    "שלוש אלף אלף",     
]


print("🔵 Valid Tests")
for text, expected in valid_tests:
    try:
        result = hebrew_to_number(text)
        assert result == expected, f"❌ Test failed: '{text}' => {result}, expected {expected}"
        print(f"✅ '{text}' => {result}")
    except Exception as e:
        print(f"❌ Exception for '{text}': {e}")

print("\n🟠 Invalid Tests")
for text in invalid_tests:
    try:
        result = hebrew_to_number(text)
        print(f"❌ Test failed (should throw error) '{text}' => {result}")
    except ValueError as e:
        print(f"✅ '{text}' => correctly raised ValueError: {e}")
